#%RAML 1.0
description: Question service, currently support asking questions about a unit guide.

/ask-question:
  get:
    description: Ask question
    queryParameters:
      question:
        description: Get list of search quizzes
        type: string
        required: true
      client_ref:
        description: The client reference example: ms-chat-bot, d2l-chat-bot
        type: string
        required: true
      context_ref:
        description: The reference of the context the question is being asked about
        type: string
        required: true
      context_type:
        description: The type of context the context_ref refers to, example unit_guide
        type: string
        required: true
      method:
        description: AI method used: albert|bert
        type: string
        required: false   
      is_dry_run:
        description: If true return with echo message, without hitting the AI service
        type: boolean
        required: false    
    responses:
      200:
        description: Answer to question including confidence factor.
        body:
          application/json:
            example: |
                {
                    "success": true,
                    "data": {
                        "answer": "Elicia Lanham; Campus: Melbourne Burwood Campus; Email: elicia.lanham@deakin.edu.au; Phone: +61 3 925 17602",
                        "transactionId": "<id string>"
                    }
                }
      500:
        description: Unexpected Error or bad parameters


/class-data/{ref}:
  uriParameters:
    ref:
      type: string
  get:
    responses:
      200:
        description: Retrieve the classification data
        body:
          application/json:
            example: |
                {
                  success: true,
                  data: {
                    "<class>": "<value"
                  }
                }
      500:
        description: Unexpected Error or bad parameters
  put:
    body:
      application/json:
    responses:
      200:
        description: Save the classification data
        body:
          application/json:
            example: |
              {
                "success": true
                "data": "<id>"
              }
      500:
        description: Unexpected Error or bad parameter  

/channel-data:
  get:
    queryParameters: 
      channelRef:
        description: Get channel data by the channel ref 
        type: string
        required: false
      contextRef:
        description: Get the channel data by the context ref
        type: string
        required: false
    responses:
      200:
        description: Retrieve the classification data
        body:
          application/json:
            example: |
                {
                  success: true,
                  contextRef: "<question context reference, example unit code>",
                  channelRef: "<question context reference, example unit code>",
                  data: {
                    "<channel data>": "<value"
                  }
                }
      500:
        description: Unexpected Error or bad parameters
  put:
    description: Save the context and channel data
    body:
      application/json:
        # properties: 
        #   contextRef: 
        #     type: string
        #     required: true
        #   channelRef:
        #     type: string
        #     required: true
        #   data:
        #     type: any
        #     required: true
    responses:
      200:
        description: Save the channel data
        body:
          application/json:
            example: |
              {
                "success": true
                "data": "<id>"
              }
      500:
        description: Unexpected Error or bad parameter  

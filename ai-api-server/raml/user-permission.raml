#%RAML 1.0
#title: User permission API for storing and retrieving user preferences for sharing personalized data.

/all:
  get:
    queryParameters:
      userId:
        description: The user id
        displayName: User Id
        type: string
        required: false
      permissionType:
        description: The permission type, example 'location'
        displayName: Permission type
        type: string
        required: false
      limit:
        description: Limit the number of records returned, defaults to 30.
        displayName: Load limit
        type: number
        required: false
      gteDateModified:
        description: All modification after this date
        displayName: Great than or equal to date modified
        type: datetime
        required: false
      sortBy:
        description: Override default sort by, default to dateModified
        displayName: Sort By
        type: string
        enum: [dateModified, dateCreated, userId]
        required: false
      sortByDir:
        description: Override default sort by direction, default to desc
        displayName: Sory By Direction
        type: string
        required: false
    responses:
      200:
        description: Get all permissions for a given search criteria
        body:
          application/json:
            example: |
              {
                "success": true,
                "result": {}
              }
      500:
        description: Unexpected Error or bad parameters.

/{userId}/{permissionType}:
  uriParameters:
    userId:
      type: string
      description: user id 
    permissionType:
      type: string
      description: Permission type, example, location
  get:
    responses:
      200:
        description: Get user permission
        body:
          application/json:
            example: |
                {
                  "success": true,
                  "result": {}
                }
      500:
        description: Unexpected Error or bad parameters
  put:
    body:
      application/json:
        properties:
          permissions: 
            properties:
              canStream:
                type: boolean
                required: true
              canSave:
                type: boolean
                required: true
              services:
                type: object
                required: false
    responses:
      200:
        description: Persisted user permission data
        body:
          application/json:
            example: |
              {
                "success": true
              }
      500:
        description: Unexpected Error or bad parameter
  delete:
    responses:
      200:
        description: Removes user permission
      500:
        description: Unexpected Error or bad parameter


/generate-token:
  description: Generate a JWT token for access to API
  get:
    queryParameters:
      userName:
        description: The user name
        displayName: User name
        type: string
        required: true
      password:
        description: The password
        displayName: Password
        type: string
        required: true